---
environment:
  title: _compressibleFlowCadExample
  tagDirectory: true
arguments:
  dm_plex_gmsh_use_regions: true
timestepper:
  # setup default controls for the time stepper
  arguments:
    ts_type: rk
    ts_max_time: 100000
    ts_max_steps: 250
    ts_dt: 1.0E-10
    ts_adapt_safety: 0.9
  # io controls how often the results are saved to a file for visualization and restart
  io:
    interval: 0 # results are saved at every step.  In real simulations this should be much larger.
  # load in a cad file directly and then create a surface mesh then volumetric mesh from the cad geometry
  domain: !ablate::domain::MeshFile
    name: exampleNozzle
#    path: ../geom/CombustionChamberV4_3d_boundary_label.msh
    path: ../geom/CombustionChamberV5.msh
#    path: ../geom/cylinder3d_boundary_label.msh
    # Options to be applied to the volumetric geometry
    options:
      dm_refine: 0
      dm_plex_check_all: true
      dm_partition_view: true
      dm_distribute_overlap: 2
    modifiers:
      # label the vertices of regions with all faces labeled
      - !ablate::domain::modifiers::CompleteLabel
        region:
          name: inlet
      - !ablate::domain::modifiers::CompleteLabel
        region:
          name: outlet
#      - !ablate::domain::modifiers::CompleteLabel
#        region:
#          name: walls
      - !ablate::domain::modifiers::CompleteLabel
        region:
          name: fuelGrain
      - !ablate::domain::modifiers::CompleteLabel
        region:
          name: chamberWalls
      # the DmViewFromOptions "modifier" does not modify the dm but outputs. Used to examine dm for errors
      - !ablate::monitors::DmViewFromOptions
        options: ascii
      - !ablate::monitors::DmViewFromOptions
        options: ascii::ascii_info_detail
      - !ablate::monitors::DmViewFromOptions
        options: ":$OutputDirectory/mesh_pre_modifiers.tex:ascii_latex"
#       the $OutputDirectory is a special keyword that gets parsed by ablate to update to the output directory
      # label all boundary faces as "marker" to allow extruding
      # test extrusion
      - !ablate::domain::modifiers::ExtrudeLabel
        # extrude the boundary cells marked
        regions:

#          # for the 3d cylinder
#          - name: inlet
#            value: 4
#          - name: outlet
#            value: 5
#          - name: walls
#            value: 6
          # for the 3d combustion chamber
          - name: inlet
            value: 31
          - name: outlet
            value: 32
          - name: fuelGrain
            value: 34
          - name: chamberWalls
            value: 33
        # mark all the resulting boundary faces with boundaryFaces label
        boundaryRegion:
          name: boundaryFaces
        # tag the original mesh as the flow region
        originalRegion:
          name: flowRegion
        # tag the new boundary cells for easy boundary condition specifications
        extrudedRegion:
          name: boundaryCells
#        thickness: 0.05

      # if using mpi, this modifier distributes cells
      - !ablate::domain::modifiers::DistributeWithGhostCells
        ghostCellDepth: 2

#      # tag the inlet boundary
#      - !ablate::domain::modifiers::CreateLabel
#        region:
#          name: inletBoundaryCells
#        function: "x < 0 ? 1.0 : 0"
#
#      # repeat for the outlet
#      - !ablate::domain::modifiers::CreateLabel
#        region:
#          name: outletBoundaryCells
#        function: "x > 2.105 ? 1.0 : 0"

      # example 2: create a wall boundary that is all boundary cells minus inlet/outlet
      - !ablate::domain::modifiers::SubtractLabel
        differenceRegion:
          name: wallBoundaryCells
        minuendRegion:
          name: boundaryCells
        subtrahendRegions:
          - name: inlet
          - name: outlet

      - !ablate::monitors::DmViewFromOptions
        options: ascii
      - !ablate::monitors::DmViewFromOptions
        options: ascii::ascii_info_detail
      - !ablate::monitors::DmViewFromOptions
        options: ":$OutputDirectory/mesh_post_modifiers.tex:ascii_latex"

    fields:
      # all fields must be defined before solvers.  The ablate::finiteVolume::CompressibleFlowFields is a helper
      # class that creates the required fields for the compressible flow solver (rho, rhoE, rhoU, ...)
      - !ablate::finiteVolume::CompressibleFlowFields
        eos: !ablate::eos::PerfectGas &eos
          parameters:
            gamma: 1.4
            Rgas: 287.0
  # set the initial conditions of the flow field
  initialization:
    - !ablate::finiteVolume::fieldFunctions::Euler
      state: &initFlowState
        eos: *eos
        pressure: 101325.0
        temperature: !ablate::mathFunctions::geom::Sphere
          center: [0.15, 0.0]
          radius: 0.15
          insideValues: [1500]
          outsideValues: [298.15]
        velocity: "25.0, 0.0, 0.0"
    # when extruding from a tet mesh, the boundary cells must be explicitly set as well
    - !ablate::finiteVolume::fieldFunctions::Euler
      region:
        name: boundaryCells
      state: *initFlowState
solvers:
  - !ablate::finiteVolume::CompressibleFlowSolver
    id: vortexFlowField
    # only apply this solver to the flowRegion
    region:
      name: flowRegion

    additionalProcesses:
      - !ablate::finiteVolume::processes::PressureGradientScaling
        &pgs
        eos: *eos
        alphaInit: 10.0
        maxAlphaAllowed: 100.0
        domainLength: 0.2
        log: !ablate::monitors::logs::StdOut

        # overwrite and set the time step based upon the CFL constraint
    computePhysicsTimeStep: false

    # a flux calculator must be specified to so solver for advection
    fluxCalculator: !ablate::finiteVolume::fluxCalculator::AusmpUp
      pgs: *pgs

    # the cfl is used to compute the physics time step
    parameters:
      cfl: 0.25

    # set the eos and transport
    eos: *eos
    transport: !ablate::eos::transport::Sutherland
      eos: *eos

    monitors:
      # output time step information for each time step
      - !ablate::monitors::MaxMinAverage
        field: velocity

  # use a boundary solver to update the cells in the wallBoundaryCells region to represent standard wall
  - !ablate::boundarySolver::BoundarySolver
    id: wallBoundary
    region:
      name: chamberWalls
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::IsothermalWall
        eos: *eos
        pgs: *pgs
  # use a boundary solver enforce an inlet
  - !ablate::boundarySolver::BoundarySolver
    id: inlet
    region:
      name: inlet
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::Inlet
        eos: *eos
        pgs: *pgs

  # use a boundary solver allow outward flow
  - !ablate::boundarySolver::BoundarySolver
    id: outlet
    region:
      name: outlet
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::OpenBoundary
        eos: *eos
        reflectFactor: 0.0
        referencePressure: 101325.0
        maxAcousticsLength: 0.1
        pgs: *pgs