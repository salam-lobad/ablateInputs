# testing 2d gmsh files, trying to apply sublimation solver to a simple cylinder before an actual combustion chamber
---
environment:
  title: _2dLabelsTest
  tagDirectory: true
arguments:
  dm_plex_gmsh_use_regions: true
timestepper:
  # setup default controls for the time stepper
  arguments:
    ts_type: rk
    ts_max_time: 1000000
    ts_max_steps: 20
    ts_dt: 1.0E-10
    ts_adapt_safety: 0.9
    ts_adapt_monitor: ""
  # io controls how often the results are saved to a file for visualization and restart
  io:
    interval: 0 # results are saved at every step.  In real simulations this should be much larger.
  # load in a mesh file
  domain: !ablate::domain::MeshFile
    name: flowRegionMesh
    path: ../geom/rectangle2d_boundary_label.msh
    # Options to be applied to the volumetric geometry
    options:
      dm_refine: 0
      dm_plex_check_all: true
      dm_partition_view: true
      dm_distribute_overlap: 2
    modifiers:
#      # label all boundary faces as "marker" to allow extruding
#      - !ablate::domain::modifiers::TagMeshBoundaryFaces
#        region:
#          name: marker
##      # the DmViewFromOptions "modifier" does not modify the dm but outputs. Used to examine dm for errors
#      - !ablate::monitors::DmViewFromOptions
#        options: ascii
#      - !ablate::monitors::DmViewFromOptions
#        options: ascii::ascii_info_detail
#      - !ablate::monitors::DmViewFromOptions
#        options: ":$OutputDirectory/mesh_pre_modifiers.tex:ascii_latex"
#      # extrude all boundaries to add needed ghost cells for the boundary solver
#      - !ablate::domain::modifiers::ExtrudeLabel
#        # extrude the boundary cells marked
#        regions:
#          - name: marker
#        # mark all the resulting boundary faces with boundaryFaces label
#        boundaryRegion:
#          name: boundaryFaces
#        # tag the original mesh as the flow region
#        originalRegion:
#          name: flowRegion
#        # tag the new boundary cells for easy boundary condition specifications
#        extrudedRegion:
#          name: boundaryCells
      # label the vertices of regions with all faces labeled
      - !ablate::domain::modifiers::CompleteLabel
        region:
          name: inlet
      - !ablate::domain::modifiers::CompleteLabel
        region:
          name: outlet
      - !ablate::domain::modifiers::CompleteLabel
        region:
          name: walls
      # the DmViewFromOptions "modifier" does not modify the dm but outputs. Used to examine dm for errors
      - !ablate::monitors::DmViewFromOptions
        options: ascii
      - !ablate::monitors::DmViewFromOptions
        options: ascii::ascii_info_detail
      - !ablate::monitors::DmViewFromOptions
        options: ":$OutputDirectory/mesh_pre_modifiers.tex:ascii_latex"
      # extrude all boundaries to add needed ghost cells for the boundary solver
      - !ablate::domain::modifiers::ExtrudeLabel
        # extrude the boundary cells marked
        regions:
          - name: inlet
            value: 5
          - name: outlet
            value: 7
          - name: walls
            value: 6
        # mark all the resulting boundary faces with boundaryFaces label
        boundaryRegion:
          name: boundaryFaces
        # tag the original mesh as the flow region
        originalRegion:
          name: flowRegion
        # tag the new boundary cells for easy boundary condition specifications
        extrudedRegion:
          name: boundaryCells
#        thickness: 0.001
      # if using mpi, this modifier distributes cells
      - !ablate::domain::modifiers::DistributeWithGhostCells
        ghostCellDepth: 2
            # tag the inlet boundary
      - !ablate::domain::modifiers::CreateLabel
        region:
          name: inletBoundaryCells
        function: "x < 0 ? 1.0 : 0"
      # the DmViewFromOptions "modifier" does not modify the dm but outputs. Used to examine dm for errors
      - !ablate::monitors::DmViewFromOptions
        options: ascii
      - !ablate::monitors::DmViewFromOptions
        options: ascii::ascii_info_detail
      - !ablate::monitors::DmViewFromOptions
        options: ":$OutputDirectory/mesh_post_modifiers.tex:ascii_latex"
#       the $OutputDirectory is a special keyword that gets parsed by ablate to update to the output directory
    fields:
      # all fields must be defined before solvers.  The ablate::finiteVolume::CompressibleFlowFields is a helper
      # class that creates the required fields for the compressible flow solver (rho, rhoE, rhoU, ...)
      - !ablate::finiteVolume::CompressibleFlowFields
        eos: !ablate::eos::TChem  &eos
          mechFile: ../mechanisms/grimech30.mech.dat
          thermoFile: ../mechanisms/grimech30.thermo.dat
        conservedFieldOptions:
          petscfv_type: upwind
      - !ablate::domain::FieldDescription
        name: pressure
        type: FV
        location: aux
        region:
          name: domain
  # set the initial conditions of the flow field
  initialization:
    - !ablate::finiteVolume::fieldFunctions::Euler
      state: &initFlowState
        eos: *eos
        pressure: 101325.0
        temperature: 298.15
#        temperature: !ablate::mathFunctions::geom::Sphere
#          center: [0.15, 0.0]
#          radius: 0.15
#          insideValues: [1500]
#          outsideValues: [298.15]
        velocity: "0, 0"
        massFractions: !ablate::finiteVolume::fieldFunctions::MassFractions
          &airMassFrac
          eos: *eos
          values:
            - fieldName: O2
              field: 0.22968530497578818
            - fieldName: N2
              field: 0.7703146950242119
    - !ablate::finiteVolume::fieldFunctions::DensityMassFractions
      state: *initFlowState
    - !ablate::finiteVolume::fieldFunctions::Euler
      region:
        name: boundaryCells
      state: *initFlowState
    - !ablate::finiteVolume::fieldFunctions::DensityMassFractions
      region:
        name: boundaryCells
      state: *initFlowState
solvers:
  - !ablate::finiteVolume::CompressibleFlowSolver
    id: vortexFlowField
    # only apply this solver to the flowRegion
    region:
      name: flowRegion
    additionalProcesses:
      - !ablate::finiteVolume::processes::PressureGradientScaling
        &pgs
        eos: *eos
        alphaInit: 10.0
        maxAlphaAllowed: 100.0
        domainLength: 2.105
#        log: !ablate::monitors::logs::StdOut
      - !ablate::finiteVolume::processes::TChemReactions
        eos: *eos
    # a flux calculator must be specified to so solver for advection
    fluxCalculator: !ablate::finiteVolume::fluxCalculator::AusmpUp
      pgs: *pgs
    # the cfl is used to compute the physics time step
    parameters:
      cfl: 0.25
    # set the eos and transport
    eos: *eos
    transport: !ablate::eos::transport::Sutherland
      &transportModel
      eos: *eos
    monitors:
      # output time step information for each time step
      - !ablate::monitors::TimeStepMonitor
        interval: 0
  # use a boundary solver enforce an inlet
  - !ablate::boundarySolver::BoundarySolver
    id: inlet
    region:
      name: inlet
      value: 5
#      name: inletBoundaryCells
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::Inlet
        eos: *eos
        pgs: *pgs
        velocity: "min(5, t*5/.06) , 0.0" # "min(15, t*4/.025) , 0.0" # t*15/.025
  # use a boundary solver allow outward flow
  - !ablate::boundarySolver::BoundarySolver
    id: outlet
    region:
      name: outlet
      value: 7
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::OpenBoundary
        eos: *eos
        reflectFactor: 0.0
        referencePressure: 101325.0
        maxAcousticsLength: 2.105
        pgs: *pgs
  # use a boundary solver to update the cells in the wallBoundaryCells region to represent standard wall
  - !ablate::boundarySolver::BoundarySolver
    id: chamberWallBoundary
    region:
      name: walls
      value: 6
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::IsothermalWall
        eos: *eos
        pgs: *pgs
